<?xml version="1.0" ?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd" >

	<name>ActionSheet</name>
	<author>SAP AG</author>
	<documentation>ActionSheet is a special kind of control which contains one or more sap.m.Button(s) and the ActionSheet will be closed when one of the buttons is tapped. It looks similar as a sap.m.Dialog in iPhone and Android while as a sap.m.Popover in iPad.</documentation>
	<since>1.9.1</since>
	
	<baseType>sap.ui.core/Control</baseType>
	<properties>
		<property group="Appearance" name="placement" type="sap.m/PlacementType" defaultValue="Bottom">
			<documentation>The ActionSheet behaves as a sap.m.Popover in iPad and this property is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. The default value is sap.m.PlacementType.Bottom.</documentation>
		</property>
		<property group="Appearance" name="showCancelButton" type="sap.ui.core/boolean" defaultValue="true">
			<documentation>If this is set to true, there will be a cancel button shown below the action buttons. There won't be any cancel button shown in iPad regardless of this property. The default value is set to true.</documentation>
		</property>
		<property group="Appearance" name="cancelButtonText" type="sap.ui.core/string">
			<documentation>This is the text displayed in the cancelButton. Default value is &quot;Cancel&quot;, and it's translated according to the current locale setting. This property will be ignored when running either in iPad or showCancelButton is set to false.</documentation>
		</property>
		<property group="Appearance" name="title" type="sap.ui.core/string">
			<documentation>Title will be shown in the header area in iPhone and every Android
devices. This property will be ignored in tablets and desktop browser.</documentation>
		</property>
	</properties>
	<events>
		<event name="cancelButtonTap">
			<documentation>This event is fired when the cancelButton is tapped. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by tapping outside.</documentation>
			<deprecation since="1.20.0">This event is deprecated, use the cancelButtonPress event instead.</deprecation>
		</event>
		<event name="beforeOpen">
			<documentation>This event will be fired before the ActionSheet is opened.</documentation>
		</event>
		<event name="afterOpen">
			<documentation>This event will be fired after the ActionSheet is opened.</documentation>
		</event>
		<event name="beforeClose">
			<documentation>This event will be fired before the ActionSheet is closed.</documentation>
		</event>
		<event name="afterClose">
			<documentation>This event will be fired after the ActionSheet is closed.</documentation>
		</event>
		<event name="cancelButtonPress">
			<documentation>This event is fired when the cancelButton is clicked. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by clicking outside.</documentation>
		</event>
	</events>
	<aggregations>
		<aggregation cardinality="0..n" name="buttons" type="sap.m/Button">
			<documentation>These buttons are added to the content area in ActionSheet control. When button is tapped, the ActionSheet is closed before the tap event listener is called.</documentation>
		</aggregation>
		<aggregation cardinality="0..1" name="_cancelButton" type="sap.m/Button" visibility="hidden">
			<documentation>The internally managed cancel button.</documentation>
		</aggregation>
	</aggregations>
	<methods>
		<method name="openBy" type="sap.ui.core/void">
			<documentation>Calling this method will make the ActionSheet visible on the screen.</documentation>
			<parameters>
				<parameter name="control" type="sap.ui.core/object">
					<documentation>The ActionSheet behaves as a sap.m.Popover in iPad and the control parameter is the object to which the popover will be placed. It can be not only a UI5 control, but also an existing dom reference. The side of the placement depends on the placement property set in the popover. In other platforms, ActionSheet behaves as a standard dialog and this parameter is ignored because dialog is aligned to the screen.</documentation>
				</parameter>
			</parameters>
		</method>
		<method name="close" type="sap.ui.core/void">
			<documentation>Calling this method will make the ActionSheet disappear from the screen.</documentation>
		</method>
		<method name="isOpen" type="sap.ui.core/boolean">
			<documentation>The method checks if the ActionSheet is open. It returns true when the ActionSheet is currently open (this includes opening and closing animations), otherwise it returns false.</documentation>
		</method>
	</methods>
</control>
