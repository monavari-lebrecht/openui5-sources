<?xml version="1.0" ?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd" >

	<name>SelectDialog</name>
	<author>SAP AG</author>
	<documentation>A SelectDialog is a dialog containing a list and search functionality to filter the list and confirmation/cancel buttons. The control can be used when the user should select one or multiple items out of many.

The list used in the SelectDialog is a growing list and can be filled with a any kind of list item. The search field triggers the events &quot;search&quot; and &quot;liveChange&quot; where a filter function can be applied to the list binding.

After selecting an item in single selection mode or after confirming in multi selection mode, the dialog will be closed and the event &quot;confirm&quot; is fired with the items that have been selected. By default, the selection will also be reset to allow for a new selection when opening the dialog again.

When cancelling the selection, the event &quot;change&quot; will be fired and the selection is restored to the state when the dialog was opened.

NOTE: The growing functionality of the list does not support Two Way Binding, so if you use this control with a JSON model make sure the binding mode is set to &quot;OneWay&quot; and that you update the selection model manually with the items passed in the &quot;confirm&quot; event.</documentation>
	<baseType>sap.ui.core/Control</baseType>
	<properties>
		<property group="Appearance" type="sap.ui.core/string" name="title">
			<documentation>The title text that appears in the dialog header</documentation>
		</property>
		<property group="Appearance" name="noDataText" type="sap.ui.core/string">
			<documentation>This is the text shown when the list has no data</documentation>
		</property>
		<property group="Dimension" name="multiSelect" type="sap.ui.core/boolean" defaultValue="false">
			<documentation>If on, the user can select several options from the list</documentation>
		</property>
		<property group="Misc" name="growingThreshold" type="sap.ui.core/int">
			<documentation>Number of items initially displayed in the list</documentation>
		</property>
		<property group="Appearance" name="contentWidth" type="sap.ui.core/CSSSize" since="1.18">
			<documentation>The content width of the inner dialog. See dialog documentation for more details.</documentation>
		</property>
		<property group="Behavior" name="rememberSelections" type="sap.ui.core/boolean" defaultValue="false" since="1.18">
			<documentation>This flag controls whether the dialog clears the selection or not after the confirm event has been fired. When the dialog is opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to &quot;true&quot;. When the dialog should reset the selection to allow for a new selection each time set it to &quot;false&quot;.</documentation>
		</property>
	</properties>
	<events>
		<event name="confirm">
			<documentation>This event will be fired when the dialog is confirmed by selecting an item in single selection mode or by pressing the confirmation button in multi selection mode . The items being selected are returned as event parameters.</documentation>
			<parameters>
				<parameter type="StandardListItem" name="selectedItem">
					<documentation>Returns the selected list item. When no item is selected, &quot;null&quot; is returned. When multi-selection is enabled and multiple items are selected, only the first selected item is returned.</documentation>
				</parameter>
				<parameter name="selectedItems" type="StandardListItem[]">
					<documentation>Returns an array containing the visible selected list items. If no items are selected, an empty array is returned.</documentation>
				</parameter>
				<parameter name="selectedContexts" type="sap.ui.core/string">
				<documentation>Returns the binding contexts of the selected items including the non-visible items. 
NOTE: In contrast to the parameter &quot;selectedItems&quot;, this parameter will also include the selected but NOT visible items (e.g. due to list filtering). An empty array will be set for this parameter if no Databinding is used.
NOTE: When the list binding is pre-filtered and there are items in the selection that are not visible upon opening the dialog the contexts are not loaded. Therefore, these items will not be included in the selectedContexts array unless they are displayed at least once.</documentation>
				</parameter>
			</parameters>
		</event>
		<event name="search">
			<documentation>This event will be fired when the search button has been clicked on the searchfield on the visual control</documentation>
			<parameters>
				<parameter name="value" type="sap.ui.core/string">
					<documentation>The value entered in the search</documentation>
				</parameter>
				<parameter name="itemsBinding" type="sap.ui.core/any">
					<documentation>The Items binding of the Select Dialog for search purposes. It will only be available if the items aggregation is bound to a model.</documentation>
				</parameter>
			</parameters>
		</event>
		<event name="liveChange">
			<documentation>This event will be fired when the value of the search field is changed by a user - e.g. at each key press</documentation>
			<parameters>
				<parameter name="value" type="sap.ui.core/string">
					<documentation>The value to search on, which can change at any keypress</documentation>
				</parameter>
				<parameter name="itemsBinding" type="sap.ui.core/any">
					<documentation>The Items binding of the Select Dialog. It will only be available if the items aggregation is bound to a model.</documentation>
				</parameter>
			</parameters>
		</event>
		<event name="cancel">
			<documentation>This event will be fired when the cancel button is clicked</documentation>
		</event>
	</events>
	<aggregations default="items">
		<aggregation cardinality="0..n" name="items" type="ListItemBase">
			<documentation>The items of the list shown in the search dialog. It is recommended to use a StandardListItem for the dialog but other combinations are also possible.</documentation>
		</aggregation>
		<aggregation cardinality="0..1" name="_dialog" type="sap.ui.core/Control" visibility="hidden">
			<documentation>The internal dialog that will be shown when method open is called</documentation>
		</aggregation>
	</aggregations>
	<methods>
		<method name="open" type="sap.m/SelectDialog">
			<documentation>Opens the select dialog</documentation>
			<parameters>
				<parameter name="searchValue" type="sap.ui.core/string">
					<documentation>A value for the search can be passed to match with the filter applied to the list binding.</documentation>
				</parameter>
			</parameters>
		</method>
	</methods>
</control>
